package gov.nih.nci.cagrid.ncia.service.globus;

import gov.nih.nci.cagrid.ncia.service.NCIACoreServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the NCIACoreServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class NCIACoreServiceProviderImpl{
	
	NCIACoreServiceImpl impl;
	
	public NCIACoreServiceProviderImpl() throws RemoteException {
		impl = new NCIACoreServiceImpl();
	}
	

    public gov.nih.nci.cagrid.ncia.stubs.GetRepresentativeImageBySeriesResponse getRepresentativeImageBySeries(gov.nih.nci.cagrid.ncia.stubs.GetRepresentativeImageBySeriesRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.GetRepresentativeImageBySeriesResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.GetRepresentativeImageBySeriesResponse();
    boxedResult.setImage(impl.getRepresentativeImageBySeries(params.getSeriesInstanceUID()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataResponse retrieveDicomData(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomData(params.getCQLQuery().getCQLQuery()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdResponse retrieveDicomDataByPatientId(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomDataByPatientId(params.getPatientId()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDResponse retrieveDicomDataBySeriesUID(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomDataBySeriesUID(params.getSeriesInstanceUID()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDResponse retrieveDicomDataByStudyUID(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomDataByStudyUID(params.getStudyInstanceUID()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdsResponse retrieveDicomDataByPatientIds(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdsRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdsResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByPatientIdsResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomDataByPatientIds(params.getPatientIds()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDsResponse retrieveDicomDataBySeriesUIDs(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDsRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDsResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataBySeriesUIDsResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomDataBySeriesUIDs(params.getSeriesInstanceUids()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDsResponse retrieveDicomDataByStudyUIDs(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDsRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDsResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByStudyUIDsResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomDataByStudyUIDs(params.getStudyInstanceUids()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.GetNumberOfStudyTimePointForPatientResponse getNumberOfStudyTimePointForPatient(gov.nih.nci.cagrid.ncia.stubs.GetNumberOfStudyTimePointForPatientRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.GetNumberOfStudyTimePointForPatientResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.GetNumberOfStudyTimePointForPatientResponse();
    boxedResult.setResponse(impl.getNumberOfStudyTimePointForPatient(params.getPatientId()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByNthStudyTimePointForPatientResponse retrieveDicomDataByNthStudyTimePointForPatient(gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByNthStudyTimePointForPatientRequest params) throws RemoteException {
    gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByNthStudyTimePointForPatientResponse boxedResult = new gov.nih.nci.cagrid.ncia.stubs.RetrieveDicomDataByNthStudyTimePointForPatientResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDicomDataByNthStudyTimePointForPatient(params.getPatientId(),params.getStudyTimepoint()));
    return boxedResult;
  }

}
